#            legend.text.fontfamily = 'Helvetica'))
# tmap_save(tmBiomeMap, file.path('..', 'results', 'figures', 'baseMap.pdf'))
# hypothesis map figure (extra figure for presentations)
# (tmHypMap <- tmBaseMap  +
#  tm_layout(frame = FALSE,
#            legend.position = c(0.99, 0.4),
#            legend.width = 1,
#            legend.text.color = '#404040',
#            legend.title.fontfamily = 'Helvetica',
#            legend.text.fontfamily = 'Helvetica'))
# tmap_save(tmBiomeMap, file.path('..', 'results', 'figures', 'hypMap.pdf'))
(tmBiomeMap <- tmBaseMap  +
tm_layout(frame = FALSE,
legend.position = c(0.89, 0.26),
legend.width = 1,
legend.text.color = '#404040',
legend.title.fontfamily = 'Helvetica',
legend.text.fontfamily = 'Helvetica'))
# distribution data, converted to sf object
(sol <- read_csv('sol.csv'))
(sol <- sol %>%
rename(brahms = BRAHMS,
species = SPECIES,
clade = GROUP,
lat = LATDEC,
lng = LONGDEC) %>%
mutate(brahms = as.factor(brahms),
clade = as.factor(clade),
species = as.factor(str_extract(species, ('\\w*\\s\\w*')))) %>%
st_as_sf(coords = c('lng', 'lat'), crs = 4326))
# determine which biome a species falls in
(inter <- as_tibble(unlist(st_intersects(sol, biomes, sparse = FALSE))))
# join the species/biome data with the distribution data to filter out species
# which don't intersect with a biome
(sol <- inter %>%
add_column(brahms = sol$brahms, .before = 1) %>%
gather(biome, value, -brahms) %>%
filter(value == TRUE) %>%
dplyr::select(brahms, biome) %>%
mutate(biome = as.integer(str_extract(biome, '\\d+')),
biome = case_when(biome <= 5 ~ 1,
between(biome, 6, 17) ~ 2,
between(biome, 18, 24) ~ 3,
between(biome, 25, 29) ~ 4,
biome >= 30 ~ 5)) %>%
inner_join(sol, by = 'brahms') %>%
dplyr::select(brahms, species, clade, biome, geometry) %>%
arrange(clade, species, biome) %>%
st_as_sf())
(tmDistMap <- tmBaseMap +
tm_shape(sol) +
tm_bubbles(shape = 21, size = 0.1, alpha = 0.8, col = 'clade',
title.col = 'Clade',
labels = c('Dry', 'Widespread'),
palette = c('#6D9EC1', '#E46726')) +
tm_layout(frame = FALSE,
legend.position = c(0.89, 0.1),
legend.width = 1,
legend.text.color = '#404040',
legend.title.fontfamily = 'Helvetica',
legend.text.fontfamily = 'Helvetica'))
sol %>%
# remove geometry column and convert to tibble
st_set_geometry(NULL) %>%
as_tibble() %>%
# count the number of each species found in each biome
group_by(clade, biome) %>%
count(species) %>%
ungroup() %>%
arrange(clade, species, biome) %>%
# turn counts into percentages of species occurence in each biome
group_by(species) %>%
mutate(count = sum(n),
n = round(n / sum(n), digits = 3)) %>%
spread(biome, n) %>%
replace(is.na(.), 0) %>%
rename('humid' = '1',
'sub-humid' = '2',
'montane' = '3',
'dry' = '4',
'sub-arid' = '5') %>%
kable('latex', booktabs = TRUE, longtable = TRUE) %>%
kable_styling(latex_options = c('repeat_header', 'striped', 'hold_position'),
repeat_header_method = 'replace')
library(knitr)
sol %>%
# remove geometry column and convert to tibble
st_set_geometry(NULL) %>%
as_tibble() %>%
# count the number of each species found in each biome
group_by(clade, biome) %>%
count(species) %>%
ungroup() %>%
arrange(clade, species, biome) %>%
# turn counts into percentages of species occurence in each biome
group_by(species) %>%
mutate(count = sum(n),
n = round(n / sum(n), digits = 3)) %>%
spread(biome, n) %>%
replace(is.na(.), 0) %>%
rename('humid' = '1',
'sub-humid' = '2',
'montane' = '3',
'dry' = '4',
'sub-arid' = '5') %>%
kable('latex', booktabs = TRUE, longtable = TRUE) %>%
kable_styling(latex_options = c('repeat_header', 'striped', 'hold_position'),
repeat_header_method = 'replace')
library(kableExtra)
sol %>%
# remove geometry column and convert to tibble
st_set_geometry(NULL) %>%
as_tibble() %>%
# count the number of each species found in each biome
group_by(clade, biome) %>%
count(species) %>%
ungroup() %>%
arrange(clade, species, biome) %>%
# turn counts into percentages of species occurence in each biome
group_by(species) %>%
mutate(count = sum(n),
n = round(n / sum(n), digits = 3)) %>%
spread(biome, n) %>%
replace(is.na(.), 0) %>%
rename('humid' = '1',
'sub-humid' = '2',
'montane' = '3',
'dry' = '4',
'sub-arid' = '5') %>%
kable('latex', booktabs = TRUE, longtable = TRUE) %>%
kable_styling(latex_options = c('repeat_header', 'striped', 'hold_position'),
repeat_header_method = 'replace')
# get occurences of species in biome; if > 12.5% found in biome, species is
# considered to be found in that biome
(sol %>%
# remove geometry column and convert to tibble
st_set_geometry(NULL) %>%
as_tibble() %>%
# count the number of each species found in each biome
group_by(clade, biome) %>%
count(species) %>%
ungroup() %>%
arrange(clade, species, biome) %>%
# turn counts into percentages of species occurence in each biome
group_by(species) %>%
mutate(count = sum(n),
n = round(n / sum(n), digits = 3)) %>%
spread(biome, n) %>%
replace(is.na(.), 0) %>%
rename('humid' = '1',
'sub-humid' = '2',
'montane' = '3',
'dry' = '4',
'sub-arid' = '5'))
sol %>%
group_by(species, clade) %>%
summarise() %>%
st_convex_hull() %>%
st_buffer(0.2) %>%
qtm()
?st_transform
sol %>%
st_transform(crs = 6873)
sol %>%
st_transform(crs = 1227)
sol %>%
st_transform(crs = 3395)
sol %>%
st_transform(crs = 3395) %>%
group_by(species, clade) %>%
summarise() %>%
st_convex_hull() %>%
st_buffer(1000) %>%
qtm()
sol %>%
st_transform(crs = 3395) %>%
group_by(species, clade) %>%
summarise() %>%
st_convex_hull() %>%
qtm()
sol %>%
st_transform(crs = 3395) %>%
group_by(species, clade) %>%
summarise() %>%
st_convex_hull() %>%
st_buffer(5000) %>%
qtm()
sol %>%
st_transform(crs = 3395) %>%
group_by(species, clade) %>%
summarise() %>%
st_convex_hull() %>%
st_buffer(20000) %>%
qtm()
sol %>%
st_transform(crs = 3395) %>% ## wgs 84/world mercator projection
group_by(species, clade) %>%
summarise()
?st_convex_hull
sol %>%
st_transform(crs = 3395) %>% ## wgs 84/world mercator projection
group_by(species, clade) %>%
summarise() %>% ## summarise() to combine all points into a multipoint geometry
st_convex_hull() %>% ## create a polygon containing an approximation of each species' range
qtm()
sol %>%
st_transform(crs = 3395) %>% ## wgs 84/world mercator projection
group_by(species, clade) %>%
summarise() %>% ## summarise() to combine all points into a multipoint geometry
# st_convex_hull() %>% ## create a polygon containing an approximation of each species' range
qtm()
?st_segmentize
sol %>%
st_transform(crs = 3395) %>% ## wgs 84/world mercator projection
group_by(species, clade) %>%
summarise() %>% ## summarise() to combine all points into a multipoint geometry
# st_convex_hull() %>% ## create a polygon containing an approximation of each species' range
st_segmentize(40000) %>%
qtm()
sol %>%
st_transform(crs = 3395) %>% ## wgs 84/world mercator projection
group_by(species, clade) %>%
summarise() %>% ## summarise() to combine all points into a multipoint geometry
# st_convex_hull() %>% ## create a polygon containing an approximation of each species' range
st_segmentize(40000)
sol %>%
st_transform(crs = 3395) %>% ## wgs 84/world mercator projection
group_by(species, clade) %>%
summarise() %>% ## summarise() to combine all points into a multipoint geometry
# st_convex_hull() %>% ## create a polygon containing an approximation of each species' range
st_segmentize(400000)
library(here)
library(phylotools)
library(ape)
read.nexus(here("data/solanum_tree.nexus"))
library(phylotools)
library(ape)
read.nexus(here("data/solanum_tree.nexus"))
library(tidyverse) # for general data manipulation and visualisation
library(sf) # for reading in shapefiles and geospatial analysis
library(raster) # for reading in raster files and geospatial analysis
library(tmap) # for cartography
library(FactoMineR) # for PCA
library(factoextra) # for PCA
library(ggcorrplot) # for correlation plots
library(cowplot) # for multi-plot
library(ape) # for reading and manipulating tree files
library(ggtree) # for viewing trees
# biome data, converted to sf object
(biomes <- st_read('bioclimates/', layer = 'bc5_dd'))
(biomes <- biomes %>%
mutate(BC1 = as.factor(BC1)) %>%
st_set_crs(value = 4326) %>% # WGS84 CRS
arrange(BC1))
# madagascar biomes base map
pal <- c('#B5EB6C', '#EEFF85', '#A4EFFF', '#FECE80', '#FF9D85')
tmBaseMap <- tm_shape(biomes) +
tm_polygons(col = 'BC1',
title = 'Biome',
labels = c('Humid', 'Sub-humid', 'Montane', 'Dry', 'Sub-arid'),
border.alpha = 0,
palette = pal)
# biome map figure (extra figure for presentations)
# (tmBiomeMap <- tmBaseMap  +
#  tm_layout(frame = FALSE,
#            legend.position = c(0.89, 0.26),
#            legend.width = 1,
#            legend.text.color = '#404040',
#            legend.title.fontfamily = 'Helvetica',
#            legend.text.fontfamily = 'Helvetica'))
# tmap_save(tmBiomeMap, file.path('..', 'results', 'figures', 'baseMap.pdf'))
# hypothesis map figure (extra figure for presentations)
# (tmHypMap <- tmBaseMap  +
#  tm_layout(frame = FALSE,
#            legend.position = c(0.99, 0.4),
#            legend.width = 1,
#            legend.text.color = '#404040',
#            legend.title.fontfamily = 'Helvetica',
#            legend.text.fontfamily = 'Helvetica'))
# tmap_save(tmBiomeMap, file.path('..', 'results', 'figures', 'hypMap.pdf'))
(tmBiomeMap <- tmBaseMap  +
tm_layout(frame = FALSE,
legend.position = c(0.89, 0.26),
legend.width = 1,
legend.text.color = '#404040',
legend.title.fontfamily = 'Helvetica',
legend.text.fontfamily = 'Helvetica'))
# distribution data, converted to sf object
(sol <- read_csv('sol.csv'))
(sol <- sol %>%
rename(brahms = BRAHMS,
species = SPECIES,
clade = GROUP,
lat = LATDEC,
lng = LONGDEC) %>%
mutate(brahms = as.factor(brahms),
clade = as.factor(clade),
species = as.factor(str_extract(species, ('\\w*\\s\\w*')))) %>%
st_as_sf(coords = c('lng', 'lat'), crs = 4326))
# determine which biome a species falls in
(inter <- as_tibble(unlist(st_intersects(sol, biomes, sparse = FALSE))))
# join the species/biome data with the distribution data to filter out species
# which don't intersect with a biome
(sol <- inter %>%
add_column(brahms = sol$brahms, .before = 1) %>%
gather(biome, value, -brahms) %>%
filter(value == TRUE) %>%
dplyr::select(brahms, biome) %>%
mutate(biome = as.integer(str_extract(biome, '\\d+')),
biome = case_when(biome <= 5 ~ 1,
between(biome, 6, 17) ~ 2,
between(biome, 18, 24) ~ 3,
between(biome, 25, 29) ~ 4,
biome >= 30 ~ 5)) %>%
inner_join(sol, by = 'brahms') %>%
dplyr::select(brahms, species, clade, biome, geometry) %>%
arrange(clade, species, biome) %>%
st_as_sf())
# tmap distribution map
tmDistMap <- tmBaseMap +
tm_shape(sol) +
tm_bubbles(shape = 21, size = 0.1, alpha = 0.8, col = 'clade',
title.col = 'Clade',
labels = c('Dry', 'Widespread'),
palette = c('#6D9EC1', '#E46726')) +
tm_layout(frame = FALSE,
legend.position = c(0.89, 0.1),
legend.width = 1,
legend.text.color = '#404040',
legend.title.fontfamily = 'Helvetica',
legend.text.fontfamily = 'Helvetica')
tmap_save(tmDistMap, file.path('..', 'results', 'figures', 'distMap.pdf'))
(tmDistMap <- tmBaseMap +
tm_shape(sol) +
tm_bubbles(shape = 21, size = 0.1, alpha = 0.8, col = 'clade',
title.col = 'Clade',
labels = c('Dry', 'Widespread'),
palette = c('#6D9EC1', '#E46726')) +
tm_layout(frame = FALSE,
legend.position = c(0.89, 0.1),
legend.width = 1,
legend.text.color = '#404040',
legend.title.fontfamily = 'Helvetica',
legend.text.fontfamily = 'Helvetica'))
sol %>%
# remove geometry column and convert to tibble
st_set_geometry(NULL) %>%
as_tibble() %>%
# count the number of each species found in each biome
group_by(clade, biome) %>%
count(species) %>%
ungroup() %>%
arrange(clade, species, biome) %>%
# turn counts into percentages of species occurence in each biome
group_by(species) %>%
mutate(count = sum(n),
n = round(n / sum(n), digits = 3)) %>%
spread(biome, n) %>%
replace(is.na(.), 0) %>%
rename('humid' = '1',
'sub-humid' = '2',
'montane' = '3',
'dry' = '4',
'sub-arid' = '5') %>%
kable('latex', booktabs = TRUE, longtable = TRUE) %>%
kable_styling(latex_options = c('repeat_header', 'striped', 'hold_position'),
repeat_header_method = 'replace')
# worldclim data at 30s resolution; from http://worldclim.org/current
climRasters <- list.files('bio_37/', pattern = '.bil', full.names = TRUE)
climRasters <- map(climRasters, raster) # provides a list of single-layer rasters
# raster layer names; from http://worldclim.org/bioclim
varNames <- c('annual_Mean_Temperature', 'mean_Diurnal_Range', 'isothermality',
'temperature_Seasonality', 'max_Temperature_of_Warmest_Month',
'min_Temperature_of_Coldest_Month', 'temperature_Annual_Range',
'mean_Temperature_of_Wettest_Quarter',
'mean_Temperature_of_Driest_Quarter',
'mean_Temperature_of_Warmest_Quarter',
'mean_Temperature_of_Coldest_Quarter', 'annual_Precipitation',
'precipitation_of_Wettest_Month', 'precipitation_of_Driest_Month',
'precipitation_Seasonality', 'precipitation_of_Wettest_Quarter',
'precipitation_of_Driest_Quarter', 'precipitation_of_Warmest_Quarter',
'precipitation_of_Coldest_Quarter')
# extract bioClim data from distribution data
bioClim <- map_dfc(climRasters, function(layer)
raster::extract(layer, as_Spatial(sol)@coords,
cellnumbers = FALSE))
# add brahms number and species columns; rename bioClim columns
bioClim <- bioClim %>%
add_column(brahms = sol$brahms,
species = sol$species,
clade = sol$clade,
.before = 1) %>%
rename_at(vars(V1:V19), ~ varNames) %>%
na.omit()
# anova; 17 of 19 significant; only isothermality and temperature_Seasonality not
summary(aov(as.matrix(cbind(bioClim[4:22])) ~ bioClim$clade))
# boxplots
(plotNames <- varNames %>%
str_replace_all('_', ' ') %>%
str_to_title())
## alter bioclim variable names for plot; unfortunately need to do this manually
## because of how names get cut off in the plot
plotNames <- c('annual_Mean_Temperature' = 'Annual\nMean Temperature',
'mean_Diurnal_Range' = 'Mean Dirunal Range',
'isothermality' = 'Isothermality',
'temperature_Seasonality' = 'Temperature\nSeasonality',
'max_Temperature_of_Warmest_Month' = 'Max Temperature\nof Warmest Month',
'min_Temperature_of_Coldest_Month' = 'Min Temperature\nof Coldest Month',
'temperature_Annual_Range' = 'Temperature\nAnnual Range',
'mean_Temperature_of_Wettest_Quarter' =
'Mean Temperature\nof Wettest Quarter',
'mean_Temperature_of_Driest_Quarter' =
'Mean Temperature\nof Driest Quarter',
'mean_Temperature_of_Warmest_Quarter' =
'Mean Temperature\nof Warmest Quarter',
'mean_Temperature_of_Coldest_Quarter' =
'Mean Temperature\nof Coldest Quarter',
'annual_Precipitation' = 'Annual Precipitation',
'precipitation_of_Wettest_Month' = 'Precipitation\nof Wettest Month',
'precipitation_of_Driest_Month' = 'Precipitation\nof Driest Month',
'precipitation_Seasonality' = 'Precipitation\nSeasonality',
'precipitation_of_Wettest_Quarter' = 'Precipitation\nof Wettest Quarter',
'precipitation_of_Driest_Quarter' = 'Precipitation\nof Driest Quarter',
'precipitation_of_Warmest_Quarter' = 'Precipitation\nof Warmest Quarter',
'precipitation_of_Coldest_Quarter' = 'Precipitation\nof Coldest Quarter')
(boxplots <- bioClim %>%
gather(key = "measurement", value = "value", -c(brahms, species, clade)) %>%
na.omit() %>%
ggplot(aes(x = clade, y = value, fill = clade)) +
geom_boxplot() +
scale_x_discrete(labels = c('Dry', 'Widespread')) +
scale_fill_manual(values = c('#6D9EC1', '#E46726')) +
xlab('Clade') +
ylab('Value') +
facet_wrap(~measurement, scales = 'free_y', nrow = 5, ncol = 4,
labeller = as_labeller(plotNames)) +
theme_light() +
theme(legend.position = 'None',
text = element_text(size = 9),
strip.background = element_rect(fill = '#404040'),
strip.text = element_text(family = ('Helvetica')),
axis.text = element_text(colour = '#404040', family = 'Helvetica')))
# ggsave(plot = boxplots, file.path('..', 'results', 'figures', 'boxplot.pdf'))
# view correlations between climate variables
(bioClim %>%
dplyr::select(-brahms, -species, -clade) %>%
cor() %>%
ggcorrplot(ggtheme = ggplot2::theme_gray,
colors = c('#6D9EC1', 'white', '#E46726')))
# pca
climPCA <- PCA(bioClim, quali.sup = 1:3, graph = FALSE)
summary(climPCA)
# cumulative percentage of variance graph
climPCA$eig %>%
as_tibble(rownames = 'component') %>%
mutate(component = as.factor(component),
component = fct_inorder(component),
`cumulative percentage of variance` = `cumulative percentage of variance` / 100) %>%
ggplot(aes(x = component, y = `cumulative percentage of variance`, group = 1)) +
geom_hline(yintercept = 0.95, colour = 'red') +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::percent,
limits = c(0, 1),
expand = expand_scale(mult = c(0, 0.05))) +
labs(x = 'Component',
y = 'Cumulative Percentage of Variance') +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1))
# dimdesc(climPCA, axes = 1:5) # not working with quali.sup arg in PCA
climPCA$var$contrib %>%
as_tibble(rownames = 'variable') %>%
arrange(desc(Dim.1))
contribPlot <- function(x) {fviz_contrib(climPCA, choice = 'var',
axes = x, xtickslab.rt = 90)}
contribPlot(1) # contribution plots for the first principal component
library(phylotools)
library(ape)
read.nexus(here("data/solanum_tree.nexus"))
read.nexus(here("solanum_tree.nexus"))
tree <- read.nexus(here("solanum_tree.nexus"))
tree
tree$tip.label
?read.nexus
library(treeio)
read.raxml("~/Downloads/RAxML_bipartitions.result")
read.raxml("~/Downloads/RAxML_bootstrap.result")
read.raxml("~/Downloads/RAxML_bestTree.result")
read.newick("solanum_tree")
?read.newick
read.newick("solanum_tree", node.label = "bootstrap")
read.newick("solanum_tree", node.label = "support")
read.newick("solanum_tree", node.label = "label")
?read.nexus
tree <- read.newick("solanum_tree", node.label = "label")
tree$tip.label
tree$
tree$edge.length
tree$edge.length
tree$Nnode
tree <- read.nexus(here("solanum_tree.nexus"))
tree <- read.nexus("solanum_tree.nexus")
# group tree according to clades
malagasy_clade <- MRCA(tree, c('Solanum batoides', 'Solanum mahoriense'))
tree$tip.label <- str_replace_all(tree$tip.label,'_', ' ')
# group tree according to clades
malagasy_clade <- MRCA(tree, c('Solanum batoides', 'Solanum mahoriense'))
oldworld_clade <- MRCA(tree, c('Solanum batoides', 'XAS119'))
tree <- groupClade(tree, .node = c(oldworld_clade, malagasy_clade), group_name = 'group')
tree
